// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-arm64-openssl-1.1.x", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  email String
  uid   String
}

model BookUser {
  id                  String               @id @default(auto()) @map("_id") @db.ObjectId
  name                String
  address             String
  phone              String
  dateCreated         DateTime             @default(now())
  updatedBy           String
  monthlySubscription MonthlySubsription[]
  payment             Payment[]
  bookID              String[]
}

model Book {
  id                 String               @id @default(auto()) @map("_id") @db.ObjectId
  title              String
  price              String
  year               String
  payment            Payment[]
  monthlySubsription MonthlySubsription[]
  dateCreated        DateTime             @default(now())
}

model MonthlySubsription {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  month        String
  year         String
  bookUser     BookUser @relation(fields: [userID], references: [id])
  userID       String   @db.ObjectId
  book         Book     @relation(fields: [bookID], references: [id])
  bookID       String   @db.ObjectId
  dateCreated  DateTime @default(now())
  dateModified DateTime @default(now())
}

model Payment {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  bookUser        BookUser @relation(fields: [userID], references: [id])
  userID          String   @db.ObjectId
  book            Book     @relation(fields: [bookID], references: [id])
  bookID          String   @db.ObjectId
  isPaid          Int
  paymentDateTime DateTime @default(now())
}
